import type { AstroIntegration } from 'astro';
export declare const ASTRO_LOCALS_HEADER = "x-astro-locals";
export declare const VERCEL_EDGE_MIDDLEWARE_FILE = "vercel-edge-middleware";
export interface VercelServerlessConfig {
    /** Force files to be bundled with your function. This is helpful when you notice missing files. */
    includeFiles?: string[];
    /** Exclude any files from the bundling process that would otherwise be included. */
    excludeFiles?: string[];
    /** Whether to create the Vercel Edge middleware from an Astro middleware in your code base. */
    edgeMiddleware?: boolean;
    /** Whether to split builds into a separate function for each route. */
    functionPerRoute?: boolean;
    /** The maximum duration (in seconds) that Serverless Functions can run before timing out. See the [Vercel documentation](https://vercel.com/docs/functions/serverless-functions/runtimes#maxduration) for the default and maximum limit for your account plan. */
    maxDuration?: number;
}
export default function vercelServerless({ includeFiles, excludeFiles, functionPerRoute, edgeMiddleware, maxDuration, }?: VercelServerlessConfig): AstroIntegration;
